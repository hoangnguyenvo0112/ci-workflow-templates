name: Checkov Security Scan

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'Directory to scan'
        required: false
        default: '.'
        type: string

jobs:
  scan:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - id: repo_name
      run: |
        REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)
        echo "repo_name=$REPO_NAME" >> "$GITHUB_OUTPUT"

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install Checkov
      run: |
        pip install --upgrade pip
        pip install checkov

    - name: Run Checkov Security Scan
      continue-on-error: true
      run: |        
        checkov -d ${{ inputs.working-directory }} -o junitxml -o json \
          --output-file-path ${{ steps.repo_name.outputs.repo_name }}-iac-security-report.xml,${{ steps.repo_name.outputs.repo_name }}-iac-security-report.json \
          --skip-path .github --skip-path node_modules --skip-path .terraform --skip-path tests --skip-path tmp || true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install xunit-viewer
      run: npm install -g xunit-viewer

    - name: Convert XML to Beautiful HTML Report
      run: |
        xunit-viewer \
          --results=${{ steps.repo_name.outputs.repo_name }}-iac-security-report.xml \
          --output=${{ steps.repo_name.outputs.repo_name }}-iac-security-report.html \
          --title="Checkov Security Scan Report"

    - name: Upload Security Reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: checkov-security-reports
        path: |
          ${{ steps.repo_name.outputs.repo_name }}-iac-security-report.json
          ${{ steps.repo_name.outputs.repo_name }}-iac-security-report.html
        retention-days: 15
